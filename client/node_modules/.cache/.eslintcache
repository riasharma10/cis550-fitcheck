[{"/Users/rashmi_iyer/Desktop/cis550-fitcheck/client/src/index.js":"1","/Users/rashmi_iyer/Desktop/cis550-fitcheck/client/src/pages/Graphs.js":"2","/Users/rashmi_iyer/Desktop/cis550-fitcheck/client/src/pages/HomePage.js":"3","/Users/rashmi_iyer/Desktop/cis550-fitcheck/client/src/pages/ProductInfoPage.js":"4","/Users/rashmi_iyer/Desktop/cis550-fitcheck/client/src/pages/ProductSuggestionsPage.js":"5","/Users/rashmi_iyer/Desktop/cis550-fitcheck/client/src/fetcher.js":"6","/Users/rashmi_iyer/Desktop/cis550-fitcheck/client/src/components/MenuBar.js":"7"},{"size":1022,"mtime":1652213902582,"results":"8","hashOfConfig":"9"},{"size":2123,"mtime":1652213902583,"results":"10","hashOfConfig":"9"},{"size":16862,"mtime":1652213902583,"results":"11","hashOfConfig":"9"},{"size":11906,"mtime":1652216891271,"results":"12","hashOfConfig":"9"},{"size":12598,"mtime":1652217019413,"results":"13","hashOfConfig":"9"},{"size":4201,"mtime":1652216869390,"results":"14","hashOfConfig":"9"},{"size":1128,"mtime":1652213902581,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ggpjy1",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rashmi_iyer/Desktop/cis550-fitcheck/client/src/index.js",[],"/Users/rashmi_iyer/Desktop/cis550-fitcheck/client/src/pages/Graphs.js",["32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48"],"import React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport {\n  Table,\n  Pagination,\n  Select,\n  Row,\n  Col,\n  Divider,\n  Slider,\n  Rate\n} from 'antd'\n\nimport MenuBar from '../components/MenuBar';\nimport { getAvgPrice, getNumProducts } from '../fetcher';\n\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\n\n\nvar results1 = [] \n\nclass GraphPage extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      numProductResults: [],\n      numData: [],\n    }\n\n   \n  }\n\n\n  \n  componentDidMount() {\n    \n    // route for the number of products per category\n    \n    getNumProducts().then(res => {\n\n        results1 = res.results;\n        console.log(res.results)\n        for (var i = 0; i < results1.length; i++) {\n          console.log(\"iteration\", i)\n          // manipulates res.results to get data in right form for the library\n          this.setState({ \n            numData: this.state.numData.concat([{name: results1[i].category2, uv: results1[i].NumProducts}])\n          })\n        }\n\n        console.log(\"numData\", this.state.numData)\n\n\n    })\n      \n    \n  }\n\n\n  render() {\n    const blueText = {color: '#1e8d9e'}\n\n    return (\n      <div>\n        <MenuBar />\n        \n          <Row>\n        \n      <div>\n        <canvas style={{ width: '512px', height: '50px' }}></canvas>\n        <h2\n          style={{\n            fontSize: '30px',\n            fontWeight: 'bold',\n            textAlign: 'right',\n            padding: '10px',\n          }}\n        >\n          {' '}\n          Number of Products Per Category:{' '}\n        </h2>\n        <LineChart width={500} height={300} data={this.state.numData}>\n            <XAxis dataKey=\"name\"/>\n            <YAxis/>\n            <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\"/>\n            <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\n            <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" />\n            <Tooltip />\n        </LineChart>\n      </div>\n      </Row>\n    </div>\n\n    )\n  }\n\n}\n\nexport default GraphPage\n\n","/Users/rashmi_iyer/Desktop/cis550-fitcheck/client/src/pages/HomePage.js",["49","50","51","52","53","54","55","56"],"import React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport {\n  Table,\n  Pagination,\n  Select,\n  Row,\n  Col,\n  Divider,\n  Slider,\n  Rate\n} from 'antd'\n\n\n\n\nimport MenuBar from '../components/MenuBar';\nimport { getCategoriesHelpful, getProductsFromKeywords, getRelatedProducts, getAboveRating } from '../fetcher'\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\n\n//columns to be displayed with the first query on page (QUERY 7)\nconst productColumns = [\n  {\n    title: 'Title',\n    dataIndex: 'ProductTitle',\n    key: 'ProductTitle',\n    sorter: (a, b) => a.ProductTitle.localeCompare(b.ProductTitle),\n  },\n  {\n    title: 'Rating',\n    dataIndex: 'AvgRating',\n    key: 'AvgRating',\n    sorter: (a, b) => a.AvgRating.localeCompare(b.AvgRating)\n  },\n  {\n    title: 'Price',\n    dataIndex: 'price',\n    key: 'price'\n  },\n  {\n    title: 'Review Text',\n    dataIndex: 'review',\n    key: 'review'\n  }\n];\n\n//columns to be displayed with the third query on page (QUERY 9)\nconst relatedProductColumns = [\n  {\n    title: 'ASIN',\n    dataIndex: 'asin',\n    key: 'asin',\n    sorter: (a, b) => a.ProductTitle.localeCompare(b.ProductTitle),\n  },\n  {\n    title: 'Also Bought Item',\n    dataIndex: 'alsoBought',\n    key: 'alsoBought',\n    sorter: (a, b) => a.alsoBought < b.alsoBought\n  },\n  {\n    title: 'Also Viewed Item',\n    dataIndex: 'alsoView',\n    key: 'alsoView',\n    \n  },\n  {\n    title: 'Item Bought Together',\n    dataIndex: 'boughtTogether',\n    key: 'boughtTogether',\n    \n  },\n  {\n    title: 'Difference between Item Bought Together and Also Bought (in days)',\n    dataIndex: 'Difference',\n    key: 'Difference',\n    sorter: (a, b) => a.Difference - b.Difference\n    \n  },\n];\n\n//columns to be displayed with the last query on page (QUERY 10)\nconst aboveRatingColumns = [\n  {\n    title: 'Title',\n    dataIndex: 'title',\n    key: 'title',\n    sorter: (a, b) => a.title.localeCompare(b.title),\n  },\n  {\n    title: 'Image',\n    dataIndex: 'image',\n    key: 'image',\n    \n  },\n  {\n    title: 'Brand',\n    dataIndex: 'brand',\n    key: 'brand',\n    sorter: (a, b) => a.brand.localeCompare(b.brand),\n    \n  },\n  {\n    title: 'Rating',\n    dataIndex: 'avg_rating',\n    key: 'avg_rating',\n    sorter: (a, b) => a.avg_rating.localeCompare(b.avg_rating),\n    \n  },\n\n];\n\nclass HomePage extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      //state for the page\n      categoryResults: [],\n      keywordResults: [],\n      relatedProductResults: [],\n      aboveRatingResults: [],\n      category: '',\n      helpfulness: '',\n      matchesPageNumber: 1,\n      matchesPageSize: 10,\n      playersResults: [],\n      pagination: null,\n      keyWord1Query: '',\n      keyWord2Query: '',\n      priceLowQuery: 0,\n      priceHighQuery: 0,\n      ratingLowQuery: 0,\n      ratingHighQuery: 0,\n      itemASIN: '',\n      relatedCategory: '',\n    }\n\n    this.relatedProductsOnChange = this.relatedProductsOnChange.bind(this)\n    this.handleRelatedCategoryChange = this.handleRelatedCategoryChange.bind(this)\n    //for helpful category query 8\n    this.categoryOnChange = this.categoryOnChange.bind(this)\n    this.helpOnChange = this.helpOnChange.bind(this)\n    this.updateSearchHelpfulCategory = this.updateSearchHelpfulCategory.bind(this)\n    \n    this.handleAboveRatingChance = this.handleAboveRatingChance.bind(this)\n\n    this.aboveRatingChange = this.aboveRatingChange.bind(this)\n\n    this.keywordOnChange = this.keywordOnChange.bind(this)\n    this.handlePriceChange = this.handlePriceChange.bind(this)\n    this.handleKeyWord1QueryChange = this.handleKeyWord1QueryChange.bind(this)\n    this.handleKeyWord2QueryChange = this.handleKeyWord2QueryChange.bind(this)\n  }\n\n\n  \n  \n  //QUERY 8 \n  //CATEGORY DROP DOWN: changes the category with the drop down\n  categoryOnChange(value) {\n    this.setState({category: value})\n    console.log(\"category updated\", this.state.category)\n    console.log(\"category updated\", value)\n  }\n  //HELPFULNESS DROP: changes the helpfulness based on dropdown value \n  helpOnChange(value) {\n    this.setState({helpfulness: value})\n    console.log(\"helpful updated\", this.state.helpfulness)\n    console.log(\"category updated\", value)\n  }\n  //SEARCH: updates states to current and then searches for results\n  updateSearchHelpfulCategory() {\n    getCategoriesHelpful(1, this.state.helpfulness, this.state.category).then(res => {\n      this.setState({ categoryResults: res.results})\n      console.log(\"results\", res.results)\n    })\n  }\n\n  //KEYWORD1 INPUT: handles the user typing into the keyword1 spot\n  handleKeyWord1QueryChange(event) {\n    console.log(\"keyword1 is changing: \", event.target.value)\n    this.setState({keyWord1Query: event.target.value})\n  }\n\n  //KEYWORD2 INPUT: handles the user typing into the keyword12spot\n  handleKeyWord2QueryChange(event) {\n    console.log(\"keyword2 is changing: \", event.target.value)\n    this.setState({keyWord2Query: event.target.value})\n  }\n\n  //PRICE INPUT: handles the user sliding the price bar\n  handlePriceChange(value) {\n    this.setState({ priceLowQuery: value[0] })\n    this.setState({ priceHighQuery: value[1] })\n  }\n\n  // updates and calls the route for QUERY 7 and puts results into the state\n  keywordOnChange() {\n    console.log(\"keyword on change function\")\n    getProductsFromKeywords(1, this.state.keyWord1Query, this.state.keyWord2Query, this.state.priceLowQuery, this.state.priceHighQuery).then(res => {\n      this.setState({ keywordResults: res.results})\n      console.log(\"keyword results\", res.results)\n    })\n    \n  }\n\n  // handles the user typing in new category for QUERY 9\n  handleRelatedCategoryChange(value) {\n    this.setState({relatedCategory: value})\n    console.log(\"related category updated\", this.state.relatedCategory)\n    console.log(\"related category updated\", value)\n  }\n\n  // calls the route for QUERY 9 when user submits and updates state with the result\n  relatedProductsOnChange() {\n    \n    getRelatedProducts(1, this.state.relatedCategory).then(res => {\n      this.setState({ relatedProductResults: res.results})\n      console.log(\"relatedProducts\", res.results)\n    })\n    \n  }\n  \n  // handles the user changing the lower rating for QUERY 10\n  aboveRatingChange(value) {\n    this.setState({ratingLowQuery: value})\n    console.log(\"ratingLow updated\", this.state.ratingLowQuery)\n  }\n  \n  // calls the route for QUERY 10 and sets result to state\n  handleAboveRatingChance() {\n    console.log(\"above rating  on change function\")\n    getAboveRating(1, this.state.ratingLowQuery).then(res => {\n      this.setState({ aboveRatingResults: res.results})\n      console.log(\"above rating results\", res.results)\n    })\n  }\n\n  \n\n  componentDidMount() {\n    \n    //route for the categories \n    getCategoriesHelpful(1, 0.2, 'Women').then(res => {\n      this.setState({ categoryResults: res.results })\n      console.log(\"results: \", res.results)\n    });\n\n    // first route for the keyword query\n    getProductsFromKeywords(1, \"greg\", \"zzz\", 7, 15).then(res => {\n      this.setState({ keywordResults: res.results})\n      console.log(\"results\", res.results)\n    });\n    \n    // routes for related products\n    getRelatedProducts(1, \"Women\").then(res => {\n      this.setState({ relatedProductResults: res.results})\n      console.log(\"relatedProducts\", res.results)\n    })\n    \n    // related for above a brand rating query\n    getAboveRating(1, 3, 5).then(res => {\n      this.setState({ aboveRatingResults: res.results})\n      console.log(\"above rating\", res.results)\n    })\n    \n  }\n\n  render() {\n    const blueText = {color: '#1e8d9e'}\n\n    return (\n      <div>\n        <MenuBar />\n        <div style={{ width: '80vw', margin: '0 auto', marginTop: '2vh' }}>\n          <h3 style = {blueText}>Products by Categories and Helpfulness</h3>\n          </div>\n\n         <table>\n           <tr>\n             <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n              </div></td>\n             <td><Row gutter='30' align='middle' justify='center'>\n          {/* CATEGORY DROP DOWN*/}\n            <Col flex={1}>\n              <Select defaultValue=\"Women\" style={{ width: 120 }} onChange={this.categoryOnChange}>\n                <Option value=\"Novelty, Costumes & More\">Novelty, Costumes & More</Option>\n                <Option value=\"Girls\">Girls</Option>\n                <Option value=\"Sports\">Sports</Option>\n                <Option value=\"Men\">Men</Option>\n                <Option value=\"Clothing\">Clothing</Option>\n                <Option value=\"New Arrivals\">New Arrivals</Option>\n                <Option value=\"Accessories\">Accessories</Option>\n                <Option value=\"Gemstones\">Gemstones</Option>\n                <Option value=\"Jewelry\">Jewelry</Option>\n                <Option value=\"Travel\">Luggage & Travel Gear</Option>\n              </Select>\n            </Col>\n          \n          </Row>\n\n          <Row>\n            {/* HELPFUL DROP DOWN*/}\n            <Col style={{ marginTop: '2vh' }} flex={1}>\n              <Select defaultValue=\"0\" style={{ width: 120 }} onChange={this.helpOnChange}>\n                <Option value=\"2\">0</Option>\n                <Option value=\".1\">1</Option>\n                <Option value=\".2\">2</Option>\n                <Option value=\".3\">3</Option>\n                <Option value=\".4\">4</Option>\n                <Option value=\".5\">5</Option>\n                <Option value=\".6\">6</Option>\n                <Option value=\".7\">7</Option>\n                <Option value=\".8\">8</Option>\n                <Option value=\".9\">9</Option>\n                <Option value=\"1\">10</Option>\n              </Select>\n          </Col>\n          </Row>\n          <Row>\n          <Col flex={35}>\n            <FormGroup style={{ width: '15vw' }}>\n              {/* Search button*/}\n              <Button outline pill theme = \"danger\" style={{ marginTop: '2vh' }} onClick={this.updateSearchHelpfulCategory}>Search</Button>\n            </FormGroup>\n          </Col>\n          </Row></td>\n             <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n              </div></td>\n             <td><div style={{ width: '50vw', margin: '0 auto', marginTop: '2vh' }}>\n             <Table  dataSource={this.state.categoryResults} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}>\n              <Column title=\"Product Id\" dataIndex=\"asin\" key=\"asin\" sorter= {(a, b) => a.asin.localeCompare(b.asin)}/>\n              <Column title=\"Name\" dataIndex=\"title\" key=\"title\" sorter= {(a, b) => a.avg_rating.localeCompare(b.avg_rating)}/>\n              <Column title=\"Average Rating\" dataIndex=\"avg_rating\" key=\"avg_rating\" sorter= {(a, b) => a.title.localeCompare(b.title)}/>\n          </Table>\n              </div>\n               </td>\n           </tr>\n           </table> \n\n          \n\n           <Divider />\n\n        <div style={{ width: '80vw', margin: '0 auto', marginTop: '2vh' }}>\n          <h3 style = {blueText}>Best Related Products by Review</h3>\n          </div>\n          <table>\n            <tr>\n              <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n              </div></td>\n              <td><Row gutter='30' align='middle' justify='center'>\n                {/* Keyword input 1*/}\n              <Col flex={2}><FormGroup style={{ width: '15vw', margin: '0 auto' }}>\n                  <label>Keyword 1</label>\n                  <FormInput placeholder=\"Greg\" value={this.state.keyWord1Query} onChange={this.handleKeyWord1QueryChange} />\n              </FormGroup></Col>\n              \n          </Row>\n\n          <Row>\n            {/* Keyword input 2*/}\n            <Col flex={2}><FormGroup style={{ width: '15vw', margin: '0 auto' }}>\n                  <label>Keyword 2</label>\n                  <FormInput placeholder=\"ZZZ\" value={this.state.keyWord2Query} onChange={this.handleKeyWord2QueryChange} />\n              </FormGroup></Col></Row>\n          <Row>\n            {/* Price Input*/}\n            <Col flex={2}><FormGroup style={{ width: '15vw', margin: '0 auto' }}>\n                  <label>Price</label>\n                  <Slider range defaultValue={[1, 300]} onChange={this.handlePriceChange} />\n              </FormGroup></Col></Row>\n          <Row><Col flex={2}><FormGroup style={{ width: '15vw', margin: '0 auto' }}>\n            {/* Search button*/}\n                              <Button outline pill theme = \"danger\" style={{ marginTop: '4vh' }} onClick={this.keywordOnChange}>Search</Button>\n                          </FormGroup></Col></Row></td>\n              <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n              </div></td>\n              <td><div style={{ width: '50vw', margin: '0 auto', marginTop: '2vh' }}>     \n            <Table dataSource={this.state.keywordResults} columns={productColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n          </div></td>\n            </tr>\n          </table>\n\n        <Divider />\n\n        <div style={{ width: '80vw', margin: '0 auto', marginTop: '2vh' }}>\n          <h3 style = {blueText}>You Might Also Enjoy in this Category...</h3>\n        </div>\n          <table>\n            <tr>\n              <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n              </div></td>\n              <td><Row gutter='30' align='middle' justify='center'>\n              <Col flex={2}>\n              <Select defaultValue=\"Women\" style={{ width: 120 }} onChange={this.handleRelatedCategoryChange}>\n                {/* Option drop down for categories*/}\n                <Option value=\"Novelty, Costumes & More\">Novelty, Costumes & More</Option>\n                <Option value=\"Girls\">Girls</Option>\n                <Option value=\"Sports\">Sports</Option>\n                <Option value=\"Men\">Men</Option>\n                <Option value=\"Clothing\">Clothing</Option>\n                <Option value=\"New Arrivals\">New Arrivals</Option>\n                <Option value=\"Accessories\">Accessories</Option>\n                <Option value=\"Gemstones\">Gemstones</Option>\n                <Option value=\"Jewelry\">Jewelry</Option>\n                <Option value=\"Travel\">Luggage & Travel Gear</Option>\n              </Select>\n              </Col>         \n          </Row>\n          <Row><Col flex={2}>\n                <FormGroup style={{ width: '15vw' }}>\n                  {/* Search button*/}\n                    <Button outline pill theme = \"danger\" style={{ marginTop: '4vh' }} onClick={this.relatedProductsOnChange}>Search</Button>\n                </FormGroup></Col>  </Row></td>\n              <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n              </div></td>\n              <td><div style={{ width: '60vw', margin: '0 auto', marginTop: '2vh' }}>                \n            <Table dataSource={this.state.relatedProductResults} columns={relatedProductColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n          </div></td>\n            </tr>\n          </table>\n        \n          <Divider />\n\n        <div style={{ width: '80vw', margin: '0 auto', marginTop: '2vh' }}>\n          <h3 style = {blueText}>All Products Above Your Rating</h3>\n        </div>\n\n          <table>\n            <tr>\n              <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n              </div></td>\n              <td><Row gutter='30' align='middle' justify='center'>\n          <Col flex={2}>\n                <Select defaultValue=\"0\" style={{ width: 120 }} onChange={this.aboveRatingChange}>\n                  {/* baseline rating input*/}\n                    <Option value=\"0\">0</Option>\n                    <Option value=\"1\">1</Option>\n                    <Option value=\"2\">2</Option>\n                    <Option value=\"3\">3</Option>\n                    <Option value=\"4\">4</Option>\n                    <Option value=\"5\">5</Option>\n                  \n                </Select>\n            </Col>   \n                \n          </Row>\n          <Row><Col flex={2}>\n                <FormGroup style={{ width: '15vw' }}>\n                   {/* Search button*/}\n                    <Button outline pill theme = \"danger\" style={{ marginTop: '4vh' }} onClick={this.handleAboveRatingChance}>Search</Button>\n                </FormGroup>\n              </Col></Row></td>\n              <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n              </div></td>\n              <td><div style={{ width: '50vw', margin: '0 auto', marginTop: '2vh' }}>    \n            <Table dataSource={this.state.aboveRatingResults} columns={aboveRatingColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n          </div></td>\n            </tr>\n          </table>\n\n    </div>\n\n    )\n  }\n\n}\n\nexport default HomePage\n\n","/Users/rashmi_iyer/Desktop/cis550-fitcheck/client/src/pages/ProductInfoPage.js",["57","58"],"/Users/rashmi_iyer/Desktop/cis550-fitcheck/client/src/pages/ProductSuggestionsPage.js",["59","60"],"/Users/rashmi_iyer/Desktop/cis550-fitcheck/client/src/fetcher.js",[],"/Users/rashmi_iyer/Desktop/cis550-fitcheck/client/src/components/MenuBar.js",[],{"ruleId":"61","severity":1,"message":"62","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":14},{"ruleId":"61","severity":1,"message":"65","line":2,"column":16,"nodeType":"63","messageId":"64","endLine":2,"endColumn":25},{"ruleId":"61","severity":1,"message":"66","line":2,"column":27,"nodeType":"63","messageId":"64","endLine":2,"endColumn":36},{"ruleId":"61","severity":1,"message":"67","line":2,"column":38,"nodeType":"63","messageId":"64","endLine":2,"endColumn":44},{"ruleId":"61","severity":1,"message":"68","line":2,"column":46,"nodeType":"63","messageId":"64","endLine":2,"endColumn":50},{"ruleId":"61","severity":1,"message":"69","line":2,"column":52,"nodeType":"63","messageId":"64","endLine":2,"endColumn":60},{"ruleId":"61","severity":1,"message":"70","line":2,"column":62,"nodeType":"63","messageId":"64","endLine":2,"endColumn":71},{"ruleId":"61","severity":1,"message":"71","line":2,"column":73,"nodeType":"63","messageId":"64","endLine":2,"endColumn":81},{"ruleId":"61","severity":1,"message":"72","line":4,"column":3,"nodeType":"63","messageId":"64","endLine":4,"endColumn":8},{"ruleId":"61","severity":1,"message":"73","line":5,"column":3,"nodeType":"63","messageId":"64","endLine":5,"endColumn":13},{"ruleId":"61","severity":1,"message":"74","line":6,"column":3,"nodeType":"63","messageId":"64","endLine":6,"endColumn":9},{"ruleId":"61","severity":1,"message":"75","line":8,"column":3,"nodeType":"63","messageId":"64","endLine":8,"endColumn":6},{"ruleId":"61","severity":1,"message":"76","line":9,"column":3,"nodeType":"63","messageId":"64","endLine":9,"endColumn":10},{"ruleId":"61","severity":1,"message":"77","line":10,"column":3,"nodeType":"63","messageId":"64","endLine":10,"endColumn":9},{"ruleId":"61","severity":1,"message":"78","line":11,"column":3,"nodeType":"63","messageId":"64","endLine":11,"endColumn":7},{"ruleId":"61","severity":1,"message":"79","line":15,"column":10,"nodeType":"63","messageId":"64","endLine":15,"endColumn":21},{"ruleId":"61","severity":1,"message":"80","line":63,"column":11,"nodeType":"63","messageId":"64","endLine":63,"endColumn":19},{"ruleId":"61","severity":1,"message":"62","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":14},{"ruleId":"61","severity":1,"message":"68","line":2,"column":46,"nodeType":"63","messageId":"64","endLine":2,"endColumn":50},{"ruleId":"61","severity":1,"message":"69","line":2,"column":52,"nodeType":"63","messageId":"64","endLine":2,"endColumn":60},{"ruleId":"61","severity":1,"message":"70","line":2,"column":62,"nodeType":"63","messageId":"64","endLine":2,"endColumn":71},{"ruleId":"61","severity":1,"message":"71","line":2,"column":73,"nodeType":"63","messageId":"64","endLine":2,"endColumn":81},{"ruleId":"61","severity":1,"message":"73","line":5,"column":3,"nodeType":"63","messageId":"64","endLine":5,"endColumn":13},{"ruleId":"61","severity":1,"message":"78","line":11,"column":3,"nodeType":"63","messageId":"64","endLine":11,"endColumn":7},{"ruleId":"61","severity":1,"message":"81","line":19,"column":17,"nodeType":"63","messageId":"64","endLine":19,"endColumn":28},{"ruleId":"61","severity":1,"message":"73","line":6,"column":5,"nodeType":"63","messageId":"64","endLine":6,"endColumn":15},{"ruleId":"61","severity":1,"message":"74","line":7,"column":5,"nodeType":"63","messageId":"64","endLine":7,"endColumn":11},{"ruleId":"61","severity":1,"message":"73","line":6,"column":5,"nodeType":"63","messageId":"64","endLine":6,"endColumn":15},{"ruleId":"61","severity":1,"message":"82","line":13,"column":10,"nodeType":"63","messageId":"64","endLine":13,"endColumn":16},"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormInput' is defined but never used.","'FormGroup' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Progress' is defined but never used.","'Table' is defined but never used.","'Pagination' is defined but never used.","'Select' is defined but never used.","'Col' is defined but never used.","'Divider' is defined but never used.","'Slider' is defined but never used.","'Rate' is defined but never used.","'getAvgPrice' is defined but never used.","'blueText' is assigned a value but never used.","'ColumnGroup' is assigned a value but never used.","'format' is defined but never used."]