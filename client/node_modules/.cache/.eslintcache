[{"/Users/riasharma/Downloads/cis550-fitcheck/client/src/index.js":"1","/Users/riasharma/Downloads/cis550-fitcheck/client/src/pages/HomePage.js":"2","/Users/riasharma/Downloads/cis550-fitcheck/client/src/fetcher.js":"3","/Users/riasharma/Downloads/cis550-fitcheck/client/src/components/MenuBar.js":"4","/Users/riasharma/Downloads/cis550-fitcheck/client/src/pages/ProductSuggestionsPage.js":"5","/Users/riasharma/Downloads/cis550-fitcheck/client/src/pages/ProductInfoPage.js":"6","/Users/riasharma/Downloads/cis550-fitcheck/client/src/pages/Graphs.js":"7"},{"size":1022,"mtime":1652116142005,"results":"8","hashOfConfig":"9"},{"size":16862,"mtime":1652209318808,"results":"10","hashOfConfig":"9"},{"size":3581,"mtime":1652208347116,"results":"11","hashOfConfig":"9"},{"size":1128,"mtime":1652120327574,"results":"12","hashOfConfig":"9"},{"size":13903,"mtime":1652083707438,"results":"13","hashOfConfig":"9"},{"size":11208,"mtime":1652083707437,"results":"14","hashOfConfig":"9"},{"size":2123,"mtime":1652213199091,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"w66da",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/riasharma/Downloads/cis550-fitcheck/client/src/index.js",[],["33","34"],"/Users/riasharma/Downloads/cis550-fitcheck/client/src/pages/HomePage.js",["35","36","37","38","39","40","41","42"],"/Users/riasharma/Downloads/cis550-fitcheck/client/src/fetcher.js",[],"/Users/riasharma/Downloads/cis550-fitcheck/client/src/components/MenuBar.js",[],"/Users/riasharma/Downloads/cis550-fitcheck/client/src/pages/ProductSuggestionsPage.js",["43","44","45","46","47","48","49","50","51","52","53"],"import React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\n\nimport {\n    Table,\n    Pagination,\n    Select,\n    Row,\n    Col,\n    Divider,\n    Slider,\n    Rate \n} from 'antd'\nimport { RadarChart } from 'react-vis';\nimport { format } from 'd3-format';\n\n\n\n\n\nimport MenuBar from '../components/MenuBar';\nimport { getPlayerSearch, getPlayer, getProductSuggestions, getBodyTypeCounts, getTopProductsByCategorySize } from '../fetcher'\nimport HomePage from './HomePage';\nconst wideFormat = format('.3r');\n\nconst { Option } = Select;\n\nconst query1Columns = [\n    {\n        title: 'item_id',\n        dataIndex: 'item_id',\n        key: 'item_id',\n        sorter: (a, b) => a.item_id - b.item_id\n    },\n    {\n        title: 'fit',\n        dataIndex: 'fit',\n        key: 'fit',\n        sorter: (a, b) => a.fit.localeCompare(b.fit)\n    },\n    {\n        title: 'review_summary',\n        dataIndex: 'review_summary',\n        key: 'review_summary',\n        sorter: (a, b) => a.review_summary.localeCompare(b.review_summary)\n    },\n    {\n        title: 'rating',\n        dataIndex: 'rating',\n        key: 'rating',\n        sorter: (a, b) => a.rating - b.rating\n        \n      }\n    // TASK 19: copy over your answers for tasks 7 - 9 to add columns for potential, club, and value\n];\n\nconst query2Columns = [\n    {\n        title: 'body_type',\n        dataIndex: 'body_type',\n        key: 'body_type',\n        sorter: (a, b) => a.body_type.localeCompare(b.body_type)\n    },\n    {\n        title: 'num',\n        dataIndex: 'num',\n        key: 'num',\n        sorter: (a, b) => a.num - b.num\n    }\n    // TASK 19: copy over your answers for tasks 7 - 9 to add columns for potential, club, and value\n];\n\nconst query3Columns = [\n    {\n        title: 'item_id',\n        dataIndex: 'item_id',\n        key: 'item_id',\n        sorter: (a, b) => a.item_id - b.item_id\n    },\n    {\n        title: 'rating',\n        dataIndex: 'rating',\n        key: 'rating',\n        sorter: (a, b) => a.rating - b.rating\n    }\n    // TASK 19: copy over your answers for tasks 7 - 9 to add columns for potential, club, and value\n];\n\n\nclass ProductSuggestionsPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            bodyTypeQuery: '',\n            bustQuery: '',\n            ageHighQuery: 100,\n            ageLowQuery: 0,\n            categoryQuery: '',\n            sizeQuery: '',\n            //selectedPlayerId: window.location.search ? window.location.search.substring(1).split('=')[1] : 229594,\n            //selectedPlayerDetails: null,\n            productSuggestionsResults: [],\n            query2results: [],\n            query3results: []\n\n        }\n\n        this.updateSearchResults = this.updateSearchResults.bind(this)\n        this.updateSearch2Results = this.updateSearch2Results.bind(this)\n        this.updateSearch3Results = this.updateSearch3Results.bind(this)\n        this.handleBodyTypeQueryChange = this.handleBodyTypeQueryChange.bind(this)\n        this.handleBustQueryChange = this.handleBustQueryChange.bind(this)\n        this.handleAgeChange = this.handleAgeChange.bind(this)\n        this.handleCategoryQueryChange = this.handleCategoryQueryChange.bind(this)\n        this.handleSizeQueryChange = this.handleSizeQueryChange.bind(this)\n    }\n\n    \n\n    handleBodyTypeQueryChange(value) {\n        this.setState({ bodyTypeQuery: value })\n    }\n\n    handleBustQueryChange(value) {\n        // TASK 20: update state variables appropriately. See handleNameQueryChange(event) for reference\n        this.setState({bustQuery: value})\n    }\n\n    handleAgeChange(value) {\n        this.setState({ ageLowQuery: value[0] })\n        this.setState({ ageHighQuery: value[1] })\n    }\n\n    handleCategoryQueryChange(value) {\n        this.setState({ categoryQuery: value })\n    }\n\n    handleSizeQueryChange(event) {\n        this.setState({ sizeQuery: event.target.value })\n    }\n\n    updateSearchResults() {\n\n        //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\n        getProductSuggestions(this.state.bodyTypeQuery, this.state.bustQuery, this.state.ageHighQuery, this.state.ageLowQuery, 1).then(res => {\n            this.setState({ productSuggestionsResults: res.results })\n        })\n    }\n\n    updateSearch2Results() {\n\n        //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\n        getBodyTypeCounts(1).then(res => {\n            this.setState({ query2results: res.results })\n        })\n    }\n\n    updateSearch3Results() {\n\n        //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\n        getTopProductsByCategorySize(this.state.categoryQuery, this.state.sizeQuery, 1).then(res => {\n            this.setState({ query3results: res.results })\n        })\n    }\n\n    componentDidMount() {\n        \n\n        // TASK 25: call getPlayer with the appropriate parameter and set update the correct state variable. \n        // See the usage of getMatch in the componentDidMount method of MatchesPage for a hint! \n        /*\n        getPlayer(this.state.selectedPlayerId).then(res => {\n            console.log(\"selected player details\", res.results)\n            this.setState({ selectedPlayerDetails: res.results[0] })\n        })\n        */\n\n    }\n\n    render() {\n        const blueText = {color: '#1e8d9e'}\n        return (\n\n            <div>\n\n                <MenuBar />\n\n                <div style={{ width: '80vw', margin: '0 auto', marginTop: '2vh' }}>\n                    <h3 style={blueText}>Do you want personalized product suggestions based on reviews from customers with similar body types, bust sizes, and/or ages?</h3>\n                </div>\n\n                <table>\n                    <tr>\n                        <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n                            </div></td>\n                        <td><Form style={{ width: '20vw', margin: '0 auto', marginTop: '5vh' }}>\n                    <Row>\n                    <Col flex={2}>\n                    \n                    <Select defaultValue=\"hourglass\" style={{ width: '20vw' }} onChange={this.handleBodyTypeQueryChange}>\n                        <Option value=\"hourglass\">Hourglass</Option>\n                        <Option value=\"petite\">Petite</Option>\n                        <Option value=\"athletic\">Athletic</Option>\n                        <Option value=\"straight & narrow\">Straight & Narrow</Option>\n                        <Option value=\"full bust\">Full Bust</Option>\n                        <Option value=\"pear\">Pear</Option>\n                        <Option value=\"apple\">Apple</Option>\n                    </Select>\n                    </Col>\n                        \n                    </Row>\n                    <br></br>\n                    <Row>\n                        <Col flex={2}>\n                            \n                            <Select defaultValue=\"32d\" style={{ width: '20vw' }} onChange={this.handleBustQueryChange}>\n                                <Option value=\"32d\">32d</Option>\n                                <Option value=\"32b\">32b</Option>\n                                <Option value=\"32c\">32c</Option>\n                                <Option value=\"32d\">32d</Option>\n                                <Option value=\"36dd\">34dd</Option>\n                                <Option value=\"34a\">34a</Option>\n                                <Option value=\"34b\">34b</Option>\n                                <Option value=\"34c\">34c</Option>\n                                <Option value=\"34d\">34d</Option>\n                                <Option value=\"34dd\">34dd</Option>\n                                <Option value=\"34g\">34g</Option>\n                                <Option value=\"36a\">34a</Option>\n                                <Option value=\"36b\">34d</Option>\n                                <Option value=\"36c\">34d</Option>\n                                <Option value=\"36d\">34d</Option>\n                                <Option value=\"36d+\">34d+</Option>\n                                <Option value=\"38c\">38c</Option>\n                                <Option value=\"38d\">38d</Option>\n\n\n                            </Select>\n                            </Col>\n                    \n                    </Row>\n                    <br></br>\n                    <Row>\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Age</label>\n                            <Slider range defaultValue={[50, 100]} onChange={this.handleAgeChange} />\n\n                        </FormGroup></Col>\n                        \n                    </Row>\n                    <br></br>\n                    <Row>\n                    <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <Button outline pill theme = \"danger\" style={{ marginTop: '4vh' }} onClick={this.updateSearchResults}>Click Me!</Button>\n                        </FormGroup></Col>\n                    </Row>\n\n                </Form></td>\n                        <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n                            </div></td>\n                        <td><div style={{ width: '50vw', margin: '0 auto', marginTop: '2vh' }}>\n                        <Table dataSource={this.state.productSuggestionsResults} columns={query1Columns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/></div>\n                        </td>\n                    </tr>\n                </table>\n\n\n                <Divider />\n                <div style={{ width: '80vw', margin: '0 auto', marginTop: '2vh' }}>\n                    <h3 style={blueText}>Do you want to know how many distinct sizes customers of each body type have purchased?</h3>\n                </div>\n                <table>\n                    <tr>\n                        <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n                            </div></td>\n                        <td><Form style={{ width: '20vw', margin: '0 auto', marginTop: '2vh' }}>\n                    <Row>\n                    <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <Button outline pill theme = \"danger\" style={{ marginTop: '1vh' }} onClick={this.updateSearch2Results}>Click Me!</Button>\n                        </FormGroup></Col>\n                    </Row>\n                </Form></td>\n                        <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n                            </div></td>\n                        <td><div style={{ width: '50vw', margin: '0 auto', marginTop: '2vh' }}>\n                        <Table dataSource={this.state.query2results} columns={query2Columns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n                            </div></td>\n                    </tr>\n                </table>\n                                \n                <Divider />\n\n                <div style={{ width: '80vw', margin: '0 auto', marginTop: '2vh' }}>\n                    <h3 style={blueText}>Do you want to see the top 100 products for a certain category and size? </h3>\n                </div>\n\n                <table>\n                    <tr>\n                        <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n                            </div></td>\n                        <td>\n                        <Form style={{ width: '20vw', margin: '0 auto', marginTop: '5vh' }}>\n                    <Row>\n                        <Col flex={2}>\n                        \n                        <Select defaultValue=\"dresses\" style={{ width: '20vw' }} onChange={this.handleCategoryQueryChange}>\n                            <Option value=\"dresses\">Dresses</Option>\n                            <Option value=\"wedding\">Wedding</Option>\n                            <Option value=\"tops\">Tops</Option>\n                            <Option value=\"bottoms\">Bottoms</Option>\n                            <Option value=\"shift\">Shift</Option>\n                            <Option value=\"outerwear\">Outerwear</Option>\n                        </Select>\n                        </Col>\n                    </Row>\n                    <br></br>\n                    <Row>\n                    <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Size (number from 0 to 40)</label>\n                            <FormInput placeholder=\"Size\" value={this.state.sizeQuery} onChange={this.handleSizeQueryChange} />\n                        </FormGroup></Col>\n                    </Row>\n                    <Row>\n                    <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <Button outline pill theme = \"danger\" style={{ marginTop: '4vh' }} onClick={this.updateSearch3Results}>Click Me!</Button>\n                        </FormGroup></Col>\n                    </Row>\n                </Form>\n                        </td>\n                        <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n                            </div></td>\n                        <td>\n                        <div style={{ width: '50vw', margin: '0 auto', marginTop: '2vh' }}>\n                        <Table dataSource={this.state.query3results} columns={query3Columns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n\n                \n                <Divider />\n\n            </div>\n        )\n    }\n}\n\nexport default ProductSuggestionsPage\n\n","/Users/riasharma/Downloads/cis550-fitcheck/client/src/pages/ProductInfoPage.js",["54","55"],"import React from 'react';\nimport { Form, FormInput, FormGroup, Button} from \"shards-react\";\n\nimport {\n    Table,\n    Pagination,\n    Select,\n    Row,\n    Col,\n    Divider,\n} from 'antd'\n\n\n\n\nimport MenuBar from '../components/MenuBar';\nimport { getInfoQuery1Search, getInfoQuery2Search, getInfoQuery3Search} from '../fetcher'\n\nconst infoQuery1Columns = [\n    {\n        title: 'Purposes',\n        dataIndex: 'rented_for',\n        key: 'rented_for',\n        sorter: (a, b) => a.rented_for.localeCompare(b.rented_for)\n    }\n];\n\nconst infoQuery2Columns = [\n    {\n        title: 'Review',\n        dataIndex: 'Review',\n        key: 'Review',\n        sorter: (a, b) => a.Review.localeCompare(b.Review)\n    },\n\n    {\n        title: 'Fit',\n        dataIndex: 'Fit',\n        key: 'Fit',\n        sorter: (a, b) => a.Fit.localeCompare(b.Fit)\n    }\n];\n\nconst infoQuery3Columns = [\n    {\n        title: 'Average Rating',\n        dataIndex: 'avg_rating',\n        key: 'avg_rating'\n    }\n];\n\n\nclass ProductInfoPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            item_id1Query: '',\n            size1Query: '',\n            item_id2Query: '',\n            rating2Query: '',\n            item_id3Query: '',\n            size3Query: '',\n            \n            query1Results: [],\n            query2Results: [],\n            query3Results: [],\n\n        }\n\n        this.updateSearchResults1 = this.updateSearchResults1.bind(this)\n        this.updateSearchResults2 = this.updateSearchResults2.bind(this)\n        this.updateSearchResults3 = this.updateSearchResults3.bind(this)\n\n        this.handleItemId1QueryChange = this.handleItemId1QueryChange.bind(this)\n        this.handleSize1QueryChange = this.handleSize1QueryChange.bind(this)\n        this.handleItemId2QueryChange = this.handleItemId2QueryChange.bind(this)\n        this.handleRating2QueryChange = this.handleRating2QueryChange.bind(this)\n        this.handleItemId3QueryChange = this.handleItemId3QueryChange.bind(this)\n        this.handleSize3QueryChange = this.handleSize3QueryChange.bind(this)\n    }\n\n    handleItemId1QueryChange(event) {\n        console.log(\"item_id1 is changing: \", event.target.value)\n        this.setState({ item_id1Query: event.target.value })\n    }\n\n    handleSize1QueryChange(event) {\n        console.log(\"size1 is changing: \", event.target.value)\n        this.setState({ size1Query: event.target.value })\n    }\n\n    handleItemId2QueryChange(event) {\n        console.log(\"item_id2 is changing: \", event.target.value)\n        this.setState({ item_id2Query: event.target.value })\n    }\n\n    handleRating2QueryChange(event) {\n        console.log(\"rating2 is changing: \", event.target.value)\n        this.setState({ rating2Query: event.target.value })\n    }\n\n    handleItemId3QueryChange(event) {\n        console.log(\"item_id3 is changing: \", event.target.value)\n        this.setState({ item_id3Query: event.target.value })\n    }\n\n    handleSize3QueryChange(event) {\n        console.log(\"size3 is changing: \", event.target.value)\n        this.setState({ size3Query: event.target.value })\n    }\n\n    //NEW STUFF\n\n    updateSearchResults1() {\n\n        getInfoQuery1Search(this.state.item_id1Query, this.state.size1Query, 1).then(res => {\n            this.setState({ query1Results: res.results })\n        })\n    }\n\n    updateSearchResults2() {\n\n        getInfoQuery2Search(this.state.item_id2Query, this.state.rating2Query, 1).then(res => {\n            this.setState({ query2Results: res.results })\n        })\n    }\n\n    updateSearchResults3() {\n\n        getInfoQuery3Search(this.state.item_id3Query, this.state.size3Query, 1).then(res => {\n            this.setState({ query3Results: res.results })\n        })\n    }\n\n    //HOW DO I SEPARATE THIS OUT FOR 3?\n    componentDidMount() {\n        getInfoQuery1Search(this.state.item_id1Query, this.state.size1Query, 1).then(res => {\n            this.setState({ query1Results: res.results })\n        })\n\n        getInfoQuery2Search(this.state.item_id2Query, this.state.rating2Query, 1).then(res => {\n            this.setState({ query2Results: res.results })\n        })\n\n        getInfoQuery3Search(this.state.item_id3Query, this.state.size3Query, 1).then(res => {\n            this.setState({ query3Results: res.results })\n        })\n\n    }\n\n    render() {\n        const blueText = {color: '#1e8d9e'}\n        return (\n\n            <div>\n\n                <MenuBar />\n                <div style={{ width: '80vw', margin: '0 auto', marginTop: '2vh' }}>\n                <h3 style = {blueText}>For what purpose was this item rented for?</h3>\n                </div>\n                <table>\n                    <tr>\n                        <td>\n                        <div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n                            </div>\n                        </td>\n                        <td>\n                        <Form style={{ width: '20vw', margin: '0 auto', marginTop: '5vh' }}>\n                    <Row>\n                        <Col flex={2}>\n        \n                            <FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Item ID (Rent the Runway)</label>\n                            <FormInput placeholder=\"Item ID\" value={this.state.item_id1Query} onChange={this.handleItemId1QueryChange} />\n                        </FormGroup></Col>\n\n                    </Row>\n                    <Row>\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Size</label>\n                            <FormInput placeholder=\"Size (number from 0 to 30)\" value={this.state.size1Query} onChange={this.handleSize1QueryChange} />\n                        </FormGroup></Col>\n                    </Row>\n                    <Row>\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <Button outline pill theme = \"danger\" style={{ marginTop: '4vh' }} onClick={this.updateSearchResults1}>Find out!</Button>\n                        </FormGroup></Col>\n                    </Row>\n\n                </Form>\n                        </td>\n                        <td>\n                        <div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n                            </div>\n                        </td>\n                        <td><div style={{ width: '50vw', margin: '0 auto', marginTop: '2vh' }}>\n                            <Table dataSource={this.state.query1Results} columns={infoQuery1Columns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/></div></td>\n                    </tr>\n                </table>\n\n                <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n                \n                </div>\n\n                <Divider />\n                <div style={{ width: '80vw', margin: '0 auto', marginTop: '2vh' }}>\n                    <h3 style = {blueText}>What was the fit and reviews for this item for customers giving it this rating?</h3>\n                </div>\n\n                <table>\n                    <tr>\n                        <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n                \n                </div></td>\n                        <td><Form style={{ width: '20vw', margin: '0 auto', marginTop: '5vh' }}>\n                <Row>\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Item ID (Rent the Runway)</label>\n                            <FormInput placeholder=\"Item ID\" value={this.state.item_id2Query} onChange={this.handleItemId2QueryChange} />\n                        </FormGroup></Col>\n\n                    </Row>\n                    <Row>\n                    <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Rating</label>\n                            <FormInput placeholder=\"Rating (number 1 - 10)\" value={this.state.rating2Query} onChange={this.handleRating2QueryChange} />\n                        </FormGroup></Col>\n                    </Row>\n                    <Row>\n                    <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <Button outline pill theme = \"danger\" style={{ marginTop: '4vh' }} onClick={this.updateSearchResults2}>Find out!</Button>\n                        </FormGroup></Col>\n                    </Row>\n                </Form></td>\n                <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n                \n                </div></td>\n                        <td><div style={{ width: '50vw', margin: '0 auto', marginTop: '2vh' }}>\n                <Table dataSource={this.state.query2Results} columns={infoQuery2Columns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n                                </div></td>\n                    </tr>\n                </table>\n\n\n                <Divider />\n\n                <div style={{ width: '80vw', margin: '0 auto', marginTop: '2vh' }}>\n                    <h3 style = {blueText}>What was the average rating for this product?</h3>\n                </div>\n                <table>\n                    <tr>\n                        <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n                        </div></td>\n                        <td><Form style={{ width: '20vw', margin: '0 auto', marginTop: '5vh' }}>\n                    <Row>\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Item ID (ModCloth)</label>\n                            <FormInput placeholder=\"Item ID\" value={this.state.item_id3Query} onChange={this.handleItemId3QueryChange} />\n                        </FormGroup></Col>\n                    </Row>\n                    <Row><Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Size</label>\n                            <FormInput placeholder=\"Size (number from 0 to 30)\" value={this.state.size3Query} onChange={this.handleSize3QueryChange} />\n                        </FormGroup></Col></Row>\n                    <Row><Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <Button outline pill theme = \"danger\" style={{ marginTop: '4vh' }} onClick={this.updateSearchResults3}>Find out!</Button>\n                        </FormGroup></Col></Row>\n                </Form></td>\n                        <td><div style={{ width: '10vw', margin: '0 auto', marginTop: '2vh' }}>\n                        </div></td>\n                        <td><div style={{ width: '50vw', margin: '0 auto', marginTop: '2vh' }}>\n                <Table dataSource={this.state.query3Results} columns={infoQuery3Columns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n                                </div></td>\n                    </tr>\n                </table>\n\n                <Divider />\n\n            </div>\n        )\n    }\n}\n\nexport default ProductInfoPage\n\n","/Users/riasharma/Downloads/cis550-fitcheck/client/src/pages/Graphs.js",["56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":14},{"ruleId":"77","severity":1,"message":"81","line":2,"column":46,"nodeType":"79","messageId":"80","endLine":2,"endColumn":50},{"ruleId":"77","severity":1,"message":"82","line":2,"column":52,"nodeType":"79","messageId":"80","endLine":2,"endColumn":60},{"ruleId":"77","severity":1,"message":"83","line":2,"column":62,"nodeType":"79","messageId":"80","endLine":2,"endColumn":71},{"ruleId":"77","severity":1,"message":"84","line":2,"column":73,"nodeType":"79","messageId":"80","endLine":2,"endColumn":81},{"ruleId":"77","severity":1,"message":"85","line":5,"column":3,"nodeType":"79","messageId":"80","endLine":5,"endColumn":13},{"ruleId":"77","severity":1,"message":"86","line":11,"column":3,"nodeType":"79","messageId":"80","endLine":11,"endColumn":7},{"ruleId":"77","severity":1,"message":"87","line":19,"column":17,"nodeType":"79","messageId":"80","endLine":19,"endColumn":28},{"ruleId":"77","severity":1,"message":"81","line":2,"column":46,"nodeType":"79","messageId":"80","endLine":2,"endColumn":50},{"ruleId":"77","severity":1,"message":"82","line":2,"column":52,"nodeType":"79","messageId":"80","endLine":2,"endColumn":60},{"ruleId":"77","severity":1,"message":"83","line":2,"column":62,"nodeType":"79","messageId":"80","endLine":2,"endColumn":71},{"ruleId":"77","severity":1,"message":"84","line":2,"column":73,"nodeType":"79","messageId":"80","endLine":2,"endColumn":81},{"ruleId":"77","severity":1,"message":"85","line":6,"column":5,"nodeType":"79","messageId":"80","endLine":6,"endColumn":15},{"ruleId":"77","severity":1,"message":"86","line":12,"column":5,"nodeType":"79","messageId":"80","endLine":12,"endColumn":9},{"ruleId":"77","severity":1,"message":"88","line":14,"column":10,"nodeType":"79","messageId":"80","endLine":14,"endColumn":20},{"ruleId":"77","severity":1,"message":"89","line":22,"column":10,"nodeType":"79","messageId":"80","endLine":22,"endColumn":25},{"ruleId":"77","severity":1,"message":"90","line":22,"column":27,"nodeType":"79","messageId":"80","endLine":22,"endColumn":36},{"ruleId":"77","severity":1,"message":"91","line":23,"column":8,"nodeType":"79","messageId":"80","endLine":23,"endColumn":16},{"ruleId":"77","severity":1,"message":"92","line":24,"column":7,"nodeType":"79","messageId":"80","endLine":24,"endColumn":17},{"ruleId":"77","severity":1,"message":"85","line":6,"column":5,"nodeType":"79","messageId":"80","endLine":6,"endColumn":15},{"ruleId":"77","severity":1,"message":"93","line":7,"column":5,"nodeType":"79","messageId":"80","endLine":7,"endColumn":11},{"ruleId":"77","severity":1,"message":"78","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":14},{"ruleId":"77","severity":1,"message":"94","line":2,"column":16,"nodeType":"79","messageId":"80","endLine":2,"endColumn":25},{"ruleId":"77","severity":1,"message":"95","line":2,"column":27,"nodeType":"79","messageId":"80","endLine":2,"endColumn":36},{"ruleId":"77","severity":1,"message":"96","line":2,"column":38,"nodeType":"79","messageId":"80","endLine":2,"endColumn":44},{"ruleId":"77","severity":1,"message":"81","line":2,"column":46,"nodeType":"79","messageId":"80","endLine":2,"endColumn":50},{"ruleId":"77","severity":1,"message":"82","line":2,"column":52,"nodeType":"79","messageId":"80","endLine":2,"endColumn":60},{"ruleId":"77","severity":1,"message":"83","line":2,"column":62,"nodeType":"79","messageId":"80","endLine":2,"endColumn":71},{"ruleId":"77","severity":1,"message":"84","line":2,"column":73,"nodeType":"79","messageId":"80","endLine":2,"endColumn":81},{"ruleId":"77","severity":1,"message":"97","line":4,"column":3,"nodeType":"79","messageId":"80","endLine":4,"endColumn":8},{"ruleId":"77","severity":1,"message":"85","line":5,"column":3,"nodeType":"79","messageId":"80","endLine":5,"endColumn":13},{"ruleId":"77","severity":1,"message":"93","line":6,"column":3,"nodeType":"79","messageId":"80","endLine":6,"endColumn":9},{"ruleId":"77","severity":1,"message":"98","line":8,"column":3,"nodeType":"79","messageId":"80","endLine":8,"endColumn":6},{"ruleId":"77","severity":1,"message":"99","line":9,"column":3,"nodeType":"79","messageId":"80","endLine":9,"endColumn":10},{"ruleId":"77","severity":1,"message":"100","line":10,"column":3,"nodeType":"79","messageId":"80","endLine":10,"endColumn":9},{"ruleId":"77","severity":1,"message":"86","line":11,"column":3,"nodeType":"79","messageId":"80","endLine":11,"endColumn":7},{"ruleId":"77","severity":1,"message":"101","line":15,"column":10,"nodeType":"79","messageId":"80","endLine":15,"endColumn":21},{"ruleId":"77","severity":1,"message":"102","line":63,"column":11,"nodeType":"79","messageId":"80","endLine":63,"endColumn":19},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Progress' is defined but never used.","'Pagination' is defined but never used.","'Rate' is defined but never used.","'ColumnGroup' is assigned a value but never used.","'RadarChart' is defined but never used.","'getPlayerSearch' is defined but never used.","'getPlayer' is defined but never used.","'HomePage' is defined but never used.","'wideFormat' is assigned a value but never used.","'Select' is defined but never used.","'FormInput' is defined but never used.","'FormGroup' is defined but never used.","'Button' is defined but never used.","'Table' is defined but never used.","'Col' is defined but never used.","'Divider' is defined but never used.","'Slider' is defined but never used.","'getAvgPrice' is defined but never used.","'blueText' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]