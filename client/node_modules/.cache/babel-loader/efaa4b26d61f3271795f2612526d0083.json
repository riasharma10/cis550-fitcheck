{"ast":null,"code":"var _jsxFileName = \"/Users/riasharma/Downloads/cis550-fitcheck/client/src/pages/Graphs.js\";\nimport React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport { Table, Pagination, Select, Row, Col, Divider, Slider, Rate } from 'antd';\nimport MenuBar from '../components/MenuBar';\nimport { getCategoriesHelpful, getProductsFromKeywords, getRelatedProducts, getAboveRating, getNumProducts } from '../fetcher';\nimport { LineChart, Line } from 'recharts';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nChartJS.register(CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title, Tooltip, Legend);\nconst {\n  Column,\n  ColumnGroup\n} = Table;\nconst {\n  Option\n} = Select; //columns to be displayed with the first query on page (QUERY 7)\n\nconst productColumns = [{\n  title: 'Title',\n  dataIndex: 'ProductTitle',\n  key: 'ProductTitle',\n  sorter: (a, b) => a.ProductTitle.localeCompare(b.ProductTitle)\n}, {\n  title: 'Rating',\n  dataIndex: 'AvgRating',\n  key: 'AvgRating',\n  sorter: (a, b) => a.AvgRating.localeCompare(b.AvgRating)\n}, {\n  title: 'Price',\n  dataIndex: 'price',\n  key: 'price'\n}, {\n  title: 'Review Text',\n  dataIndex: 'review',\n  key: 'review'\n}]; //columns to be displayed with the third query on page (QUERY 9)\n\nconst relatedProductColumns = [{\n  title: 'ASIN',\n  dataIndex: 'asin',\n  key: 'asin',\n  sorter: (a, b) => a.ProductTitle.localeCompare(b.ProductTitle)\n}, {\n  title: 'Also Bought Item',\n  dataIndex: 'alsoBought',\n  key: 'alsoBought',\n  sorter: (a, b) => a.alsoBought < b.alsoBought\n}, {\n  title: 'Also Viewed Item',\n  dataIndex: 'alsoView',\n  key: 'alsoView'\n}, {\n  title: 'Item Bought Together',\n  dataIndex: 'boughtTogether',\n  key: 'boughtTogether'\n}, {\n  title: 'Difference between Item Bought Together and Also Bought (in days)',\n  dataIndex: 'Difference',\n  key: 'Difference',\n  sorter: (a, b) => a.Difference - b.Difference\n}]; //columns to be displayed with the last query on page (QUERY 10)\n\nconst aboveRatingColumns = [{\n  title: 'Title',\n  dataIndex: 'title',\n  key: 'title',\n  sorter: (a, b) => a.title.localeCompare(b.title)\n}, {\n  title: 'Image',\n  dataIndex: 'image',\n  key: 'image'\n}, {\n  title: 'Brand',\n  dataIndex: 'brand',\n  key: 'brand',\n  sorter: (a, b) => a.brand.localeCompare(b.brand)\n}, {\n  title: 'Rating',\n  dataIndex: 'avg_rating',\n  key: 'avg_rating',\n  sorter: (a, b) => a.avg_rating.localeCompare(b.avg_rating)\n}];\nconst scores_options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      display: false\n    }\n  },\n  scales: {\n    x: {\n      display: true,\n      title: {\n        display: true,\n        text: 'Categories'\n      }\n    },\n    y: {\n      display: true,\n      title: {\n        display: true,\n        text: 'Num Products'\n      }\n    }\n  }\n};\n\nclass GraphPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphResults: []\n    }; //this.handleKeyWord2QueryChange = this.handleKeyWord2QueryChange.bind(this)\n  }\n  /*\n  // updates and calls the route for QUERY 7 and puts results into the state\n  keywordOnChange() {\n    console.log(\"keyword on change function\")\n    getProductsFromKeywords(1, this.state.keyWord1Query, this.state.keyWord2Query, this.state.priceLowQuery, this.state.priceHighQuery).then(res => {\n      this.setState({ keywordResults: res.results})\n      console.log(\"keyword results\", res.results)\n    })\n    \n  }\n   // handles the user typing in new category for QUERY 9\n  handleRelatedCategoryChange(value) {\n    this.setState({relatedCategory: value})\n    console.log(\"related category updated\", this.state.relatedCategory)\n    console.log(\"related category updated\", value)\n  }\n   // calls the route for QUERY 9 when user submits and updates state with the result\n  relatedProductsOnChange() {\n    \n    getRelatedProducts(1, this.state.relatedCategory).then(res => {\n      this.setState({ relatedProductResults: res.results})\n      console.log(\"relatedProducts\", res.results)\n    })\n    \n  }\n  \n  */\n\n\n  componentDidMount() {\n    getNumProducts().then(res => {\n      this.setState({\n        graphResults: res.results\n      });\n      console.log(\"above rating\", res.results);\n    });\n  }\n\n  render() {\n    const blueText = {\n      color: '#1e8d9e'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          style: {\n            width: '512px',\n            height: '150px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: '30px',\n            fontWeight: 'bold',\n            textAlign: 'center',\n            padding: '10px'\n          },\n          children: [' ', \"Average Price Per Category:\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 500,\n          height: 300,\n          data: this.state.graphResults,\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#eee\",\n            strokeDasharray: \"5 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"uv\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"pv\",\n            stroke: \"#82ca9d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default GraphPage;","map":{"version":3,"sources":["/Users/riasharma/Downloads/cis550-fitcheck/client/src/pages/Graphs.js"],"names":["React","Form","FormInput","FormGroup","Button","Card","CardBody","CardTitle","Progress","Table","Pagination","Select","Row","Col","Divider","Slider","Rate","MenuBar","getCategoriesHelpful","getProductsFromKeywords","getRelatedProducts","getAboveRating","getNumProducts","LineChart","Line","Chart","ChartJS","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","PointElement","BarElement","LineElement","Title","register","Column","ColumnGroup","Option","productColumns","title","dataIndex","key","sorter","a","b","ProductTitle","localeCompare","AvgRating","relatedProductColumns","alsoBought","Difference","aboveRatingColumns","brand","avg_rating","scores_options","responsive","plugins","legend","display","scales","x","text","y","GraphPage","Component","constructor","props","state","graphResults","componentDidMount","then","res","setState","results","console","log","render","blueText","color","width","height","fontSize","fontWeight","textAlign","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport {\n  Table,\n  Pagination,\n  Select,\n  Row,\n  Col,\n  Divider,\n  Slider,\n  Rate\n} from 'antd'\n\nimport MenuBar from '../components/MenuBar';\nimport { getCategoriesHelpful, getProductsFromKeywords, getRelatedProducts, getAboveRating, getNumProducts } from '../fetcher'\n\nimport { LineChart, Line } from 'recharts';\nimport {\n    Chart as ChartJS,\n    ArcElement,\n    Tooltip,\n    Legend,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    BarElement,\n    LineElement,\n    Title,\n  } from 'chart.js';\n  \n  ChartJS.register(ArcElement, Tooltip, Legend);\n  \n  ChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    BarElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n  );\n  \n  \n  const { Column, ColumnGroup } = Table;\n  const { Option } = Select;\n\n\n\n//columns to be displayed with the first query on page (QUERY 7)\nconst productColumns = [\n  {\n    title: 'Title',\n    dataIndex: 'ProductTitle',\n    key: 'ProductTitle',\n    sorter: (a, b) => a.ProductTitle.localeCompare(b.ProductTitle),\n  },\n  {\n    title: 'Rating',\n    dataIndex: 'AvgRating',\n    key: 'AvgRating',\n    sorter: (a, b) => a.AvgRating.localeCompare(b.AvgRating)\n  },\n  {\n    title: 'Price',\n    dataIndex: 'price',\n    key: 'price'\n  },\n  {\n    title: 'Review Text',\n    dataIndex: 'review',\n    key: 'review'\n  }\n];\n\n//columns to be displayed with the third query on page (QUERY 9)\nconst relatedProductColumns = [\n  {\n    title: 'ASIN',\n    dataIndex: 'asin',\n    key: 'asin',\n    sorter: (a, b) => a.ProductTitle.localeCompare(b.ProductTitle),\n  },\n  {\n    title: 'Also Bought Item',\n    dataIndex: 'alsoBought',\n    key: 'alsoBought',\n    sorter: (a, b) => a.alsoBought < b.alsoBought\n  },\n  {\n    title: 'Also Viewed Item',\n    dataIndex: 'alsoView',\n    key: 'alsoView',\n    \n  },\n  {\n    title: 'Item Bought Together',\n    dataIndex: 'boughtTogether',\n    key: 'boughtTogether',\n    \n  },\n  {\n    title: 'Difference between Item Bought Together and Also Bought (in days)',\n    dataIndex: 'Difference',\n    key: 'Difference',\n    sorter: (a, b) => a.Difference - b.Difference\n    \n  },\n];\n\n//columns to be displayed with the last query on page (QUERY 10)\nconst aboveRatingColumns = [\n  {\n    title: 'Title',\n    dataIndex: 'title',\n    key: 'title',\n    sorter: (a, b) => a.title.localeCompare(b.title),\n  },\n  {\n    title: 'Image',\n    dataIndex: 'image',\n    key: 'image',\n    \n  },\n  {\n    title: 'Brand',\n    dataIndex: 'brand',\n    key: 'brand',\n    sorter: (a, b) => a.brand.localeCompare(b.brand),\n    \n  },\n  {\n    title: 'Rating',\n    dataIndex: 'avg_rating',\n    key: 'avg_rating',\n    sorter: (a, b) => a.avg_rating.localeCompare(b.avg_rating),\n    \n  },\n\n];\n\nconst scores_options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Categories',\n        },\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Num Products',\n        },\n      },\n    },\n  };\n\nclass GraphPage extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      graphResults: [],\n    }\n\n   \n    //this.handleKeyWord2QueryChange = this.handleKeyWord2QueryChange.bind(this)\n  }\n\n\n  \n  \n  /*\n  // updates and calls the route for QUERY 7 and puts results into the state\n  keywordOnChange() {\n    console.log(\"keyword on change function\")\n    getProductsFromKeywords(1, this.state.keyWord1Query, this.state.keyWord2Query, this.state.priceLowQuery, this.state.priceHighQuery).then(res => {\n      this.setState({ keywordResults: res.results})\n      console.log(\"keyword results\", res.results)\n    })\n    \n  }\n\n  // handles the user typing in new category for QUERY 9\n  handleRelatedCategoryChange(value) {\n    this.setState({relatedCategory: value})\n    console.log(\"related category updated\", this.state.relatedCategory)\n    console.log(\"related category updated\", value)\n  }\n\n  // calls the route for QUERY 9 when user submits and updates state with the result\n  relatedProductsOnChange() {\n    \n    getRelatedProducts(1, this.state.relatedCategory).then(res => {\n      this.setState({ relatedProductResults: res.results})\n      console.log(\"relatedProducts\", res.results)\n    })\n    \n  }\n  \n  */\n\n  componentDidMount() {\n    \n    getNumProducts().then(res => {\n        this.setState({ graphResults: res.results})\n        console.log(\"above rating\", res.results)\n      })\n    \n  }\n\n\n  render() {\n    const blueText = {color: '#1e8d9e'}\n\n    return (\n      <div>\n        <MenuBar />\n        <div>\n                <canvas style={{ width: '512px', height: '150px' }}></canvas>\n                <h2\n                  style={{\n                    fontSize: '30px',\n                    fontWeight: 'bold',\n                    textAlign: 'center',\n                    padding: '10px',\n                  }}\n                >\n                  {' '}\n                  Average Price Per Category:{' '}\n                </h2>\n                <LineChart width={500} height={300} data={this.state.graphResults}>\n                    <XAxis dataKey=\"name\"/>\n                    <YAxis/>\n                    <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\"/>\n                    <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\n                    <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" />\n                </LineChart>\n              </div>\n\n    </div>\n\n    )\n  }\n\n}\n\nexport default GraphPage\n\n"]},"metadata":{},"sourceType":"module"}